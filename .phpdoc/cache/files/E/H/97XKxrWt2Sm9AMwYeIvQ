1678125917
waR3U4bTeM%3A828e0013b8f3bc1bb22b4f57172b019d-a5ef64b2638c57551aa64a3e81b3489e
s:7096:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImE1ZWY2NGIyNjM4YzU3NTUxYWE2NGEzZTgxYjM0ODllIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6OToiaW5kZXgucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6OToiaW5kZXgucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czo0NDM3OiI8P3BocA0Kc2Vzc2lvbl9zdGFydCgpOw0KDQovL2NlayBjb29raWUNCmlmIChpc3NldCgkX0NPT0tJRVsnbG9naW4nXSkpIHsNCiAgICBpZiAoJF9DT09LSUVbJ2xvZ2luJ10gPT0gJ3RydWUnKSB7DQogICAgICAgICRfU0VTU0lPTlsnbG9naW4nXSA9IHRydWU7DQogICAgfQ0KfQ0KaWYgKGlzc2V0KCRfU0VTU0lPTlsibG9naW4iXSkpIHsNCiAgICBoZWFkZXIoIkxvY2F0aW9uOmRhc2hib2FyZC5waHAiKTsNCiAgICBleGl0Ow0KfQ0KDQpyZXF1aXJlICdjb25maWcucGhwJzsNCg0KaWYgKGlzc2V0KCRfUE9TVFsibG9naW4iXSkpIHsNCiAgICAkdXNlcm5hbWUgPSAkX1BPU1RbInVzZXJuYW1lIl07DQogICAgJHBhc3N3b3JkID0gJF9QT1NUWyJwYXNzd29yZCJdOw0KDQogICAgJHJlc3VsdCA9IG15c3FsaV9xdWVyeSgka29uZWtzaSwgIlNFTEVDVCAqIEZST00gYWRtaW4gV0hFUkUgdXNlcm5hbWUgPSAnJHVzZXJuYW1lJyBBTkQgcGFzc3dvcmQgPSAnJHBhc3N3b3JkJyIpOw0KICAgICRkYXRhID0gbXlzcWxpX2ZldGNoX2FycmF5KCRyZXN1bHQpOw0KDQogICAgJHJvdyA9IG15c3FsaV9mZXRjaF9hc3NvYygkcmVzdWx0KTsNCg0KICAgIGlmICgkZGF0YSkgew0KICAgICAgICAvLyBzZXQgc2Vzc2lvbg0KICAgICAgICAkX1NFU1NJT05bImxvZ2luIl0gPSB0cnVlOw0KDQogICAgICAgIC8vc2V0IHJlbWVtYmVyDQogICAgICAgIGlmIChpc3NldCgkX1BPU1RbJ3JlbWVtYmVyJ10pKSB7DQogICAgICAgICAgICBzZXRjb29raWUoJ2xvZ2luJywgJ3RydWUnLCB0aW1lKCkgKyA4NjQwMCk7DQogICAgICAgIH0NCg0KICAgICAgICBoZWFkZXIoJ2xvY2F0aW9uOi90b2tvYnVrdS9kYXNoYm9hcmQucGhwJyk7DQogICAgICAgIGV4aXQ7DQogICAgfSBlbHNlIHsNCg0KICAgICAgICAkZXJyb3IgPSB0cnVlOw0KICAgIH0NCn0NCj8+DQo8IURPQ1RZUEUgaHRtbD4NCjxodG1sIGxhbmc9ImVuIj4NCg0KPGhlYWQ+DQogICAgPG1ldGEgY2hhcnNldD0idXRmLTgiPg0KICAgIDxtZXRhIGh0dHAtZXF1aXY9IlgtVUEtQ29tcGF0aWJsZSIgY29udGVudD0iSUU9ZWRnZSI+DQogICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xIj4NCiAgICA8bGluayBocmVmPSJpbWcvaXMxLnBuZyIgcmVsPSJpY29uIj4NCiAgICA8bGluayBocmVmPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2Jvb3RzdHJhcEA1LjAuMi9kaXN0L2Nzcy9ib290c3RyYXAubWluLmNzcyIgcmVsPSJzdHlsZXNoZWV0IiBpbnRlZ3JpdHk9InNoYTM4NC1FVlNUUU4zL2F6cHJHMUFubTNRRGdwSkxJbTlOYW8wWXoxenRjUVR3RnNwZDN5RDY1Vm9oaHB1dUNPbUxBU2pDIiBjcm9zc29yaWdpbj0iYW5vbnltb3VzIj4NCg0KICAgIDx0aXRsZT5HYXJpcyBCb29rIFN0b3JlPC90aXRsZT4NCjwvaGVhZD4NCg0KPGJvZHk+DQogICAgPHNlY3Rpb24gaWQ9ImFkZCIgY2xhc3M9ImgtMTAwIj4NCiAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIGgtMTAwIj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyBqdXN0aWZ5LWNvbnRlbnQtc20tY2VudGVyIGgtMTAwIj4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHhsLTQgY29sLXhsLTUgY29sLWxnLTUgY29sLW1kLTcgY29sLXNtLTkiPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LWNlbnRlciBteS01Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3R5bGU9IndpZHRoOiA0NTBweDsiIGNsYXNzPSJpbWctZmx1aWQgbXgtYXV0byBkLWJsb2NrIiBzcmM9ImltZy9nLnBuZyIgYWx0PSJsb2dvIj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgc2hhZG93LWxnIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYm9keSBwLTUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMSBjbGFzcz0iZnMtNCBjYXJkLXRpdGxlIGZ3LWJvbGQgbWItNCB0ZXh0LWNlbnRlciI+TG9naW4gQWRtaW48L2gxPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxmb3JtIGFjdGlvbj0iaW5kZXgucGhwIiBtZXRob2Q9IlBPU1QiIGNsYXNzPSJuZWVkcy12YWxpZGF0aW9uIiBub3ZhbGlkYXRlPSIiIGF1dG9jb21wbGV0ZT0ib2ZmIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWItMyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9Im1iLTIgdGV4dC1tdXRlZCIgZm9yPSJlbWFpbCI+VXNlcm5hbWU8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGlkPSJlbWFpbCIgdHlwZT0iZW1haWwiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIG5hbWU9InVzZXJuYW1lIiB2YWx1ZT0iIiByZXF1aXJlZCBhdXRvZm9jdXM+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1iLTMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWItMiB3LTEwMCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJ0ZXh0LW11dGVkIiBmb3I9InBhc3N3b3JkIj5QYXNzd29yZDwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD0icGFzc3dvcmQiIHR5cGU9InBhc3N3b3JkIiBjbGFzcz0iZm9ybS1jb250cm9sIiBuYW1lPSJwYXNzd29yZCIgcmVxdWlyZWQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDw/cGhwIGlmIChpc3NldCgkZXJyb3IpKSA6ID8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0iY29sb3I6IHJlZDsiPlVzZXJuYW1lIGF0YXUgUGFzc3dvcmQgc2FsYWghPC9wPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8P3BocCBlbmRpZjsgPz4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tY2hlY2siPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgbmFtZT0icmVtZW1iZXIiIGlkPSJyZW1lbWJlciIgY2xhc3M9ImZvcm0tY2hlY2staW5wdXQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InJlbWVtYmVyIiBjbGFzcz0iZm9ybS1jaGVjay1sYWJlbCI+UmVtZW1iZXIgTWU8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjNGU3M2RmOyIgaWQ9YnRubGcgdHlwZT0ic3VibWl0IiBuYW1lPSJsb2dpbiIgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSBtcy1hdXRvIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dpbg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZm9ybT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGV4dC1jZW50ZXIgbXQtNSB0ZXh0LW11dGVkIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIENvcHlyaWdodCAmY29weTsgMjAyMSAmbWRhc2g7IEdhcmlzIEJvb2sgU3RvcmUgfCBGYWlzYWwgRmlkaXlhdHVsbG9oIDIwMTkwMTQwMDEwDQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgIDwvc2VjdGlvbj4NCiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L25wbS9ib290c3RyYXBANS4wLjIvZGlzdC9qcy9ib290c3RyYXAuYnVuZGxlLm1pbi5qcyIgaW50ZWdyaXR5PSJzaGEzODQtTXJjVzZaTUZZbHpjTEE4TmwrTnRVVkYwc0E3TXNYc1AxVXlKb01wNFlMRXVOU2ZBUCtKY1huL3RXdElheFZYTSIgY3Jvc3NvcmlnaW49ImFub255bW91cyI+DQogICAgPC9zY3JpcHQ+DQo8L2JvZHk+DQoNCjwvaHRtbD4iO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fXM6NDA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZW51bXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";